apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: milvus-docker-export-image
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: Image Build
    tekton.dev/tags: docker, build-image, push-image, dind
    tekton.dev/displayName: docker-build
    tekton.dev/platforms: "linux/amd64"
spec:
  description: >-
    The task is using a dind sidecar over TCP+TLS.
    This task will build and push an image using docker.
    The task will compile first in the milvusdb/milvus-env container, then
    build image based on the dockerfile.
    This image will be pushed to an image registry.
  params:
  - name: image_name
    type: string
    description: Reference of the image docker will produce.
  - name: dockerfile
    type: string
    description: Path to the Dockerfile to build.
    default: ./build/docker/milvus/ubuntu20.04/Dockerfile
  - name: arch
    type: string
    default: amd64
  - name: milvus-env
    type: string
    description: the image name of milvusdb/milvus-env to use
  - name: builder_image
    type: string
    description: The location of the docker builder image.
    default: docker:latest
  - name: dind_image
    type: string
    description: The location of the docker-in-docker image.
    default: docker:dind
  - name: context
    type: string
    description: Path to the directory to use as context.
    default: .
  - name: insecure_registry
    type: string
    description: Allows the user to push to an insecure registry that has been specified
    default: "https://docker-nexus-ci.zilliz.cc"
  - name: registry_mirror
    type: string
    description: Allows the user to push to an insecure registry that has been specified
    default: "https://docker-nexus-ci.zilliz.cc"
  - name: cpus_quota 
    type: string
    default: ""
  workspaces:
  - name: source
  results:
  - name: IMAGE_DIGEST
    description: Digest of the image just built.
  steps:
  - name: docker-save
    image: $(params.builder_image)
    env:
    # Connect to the sidecar over TCP, with TLS.
    - name: DOCKER_HOST
      value: tcp://localhost:2376
    # Verify TLS.
    - name: DOCKER_TLS_VERIFY
      value: '1'
    # Use the certs generated by the sidecar daemon.
    - name: DOCKER_CERT_PATH
      value: /certs/client
    workingDir: $(workspaces.source.path)
    script: |
      #!/usr/bin/env sh
      docker save -o milvus-image.tar $(params.image_name)
    volumeMounts:
      - mountPath: /certs/client
        name: dind-certs
      - mountPath: /var/lib/docker
        name: docker-data
  sidecars:
  - image: $(params.dind_image)
    name: server
    args:
      - --storage-driver=overlay2
      - --userland-proxy=false
      - --insecure-registry=$(params.insecure_registry)
      - --registry-mirror=$(params.registry_mirror)      
    securityContext:
      privileged: true
    env:
    # Write generated certs to the path shared with the client.
    - name: DOCKER_TLS_CERTDIR
      value: /certs
    volumeMounts:
    - mountPath: /certs/client
      name: dind-certs
    - mountPath: /var/lib/docker
      name: docker-data
    # Wait for the dind daemon to generate the certs it will share with the
    # client.
    readinessProbe:
      periodSeconds: 1
      exec:
        command: ['ls', '/certs/client/ca.pem']
  volumes:
  - name: dind-certs
    emptyDir: {}
  - name: docker-data
    emptyDir: {}
