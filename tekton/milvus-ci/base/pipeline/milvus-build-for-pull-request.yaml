apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: milvus-build-for-pull-request
spec:
  description: |
    This pipeline clones a milvus git repo, builds a Docker image with docker in docker and
    pushes it to a registry
  params:
  - name: repo_url
    type: string
    description: the github url of the repo
    default: https://github.com/milvus-io/milvus.git
  - name: pullRequestBaseRef
    type: string
  - name: pullRequestNumber
    type: string
  - name: milvus_repo_owner
    type: string
    default: "milvus-io"
  - name: revision
    type: string
    description: the branch name or tag name of the repo
    default: "master"
  - name: registryToPush
    type: string
    description: the image registry to push
    default: "harbor.milvus.io"
  - name: computing_engine
    type: string
    default: "cpu"
    description: to build cpu image or gpu image
  - name: arch
    type: string
    description: the architectures of the image, it would be amd64 or arm64
    default: "amd64"
  - name: os_name
    type: string
    description: the os of milvus-env to use, it could be ubuntu20.04, or ubuntu22.04 ...
    default: ""
  - name: milvus_env_version
    type: string
    default: ""
    description: the version of milvus-env to use
  - name: suppress_suffix_of_image_tag
    type: string
    description: whether to suppress suffix of image tag
    default: false
  - name: build_type
    type: string
    description: whether to enable debug mode when compile
    default: release
  - name: gcc
    type: string
    description: gcc version to use
    default: gcc12
  - name: additional-make-params 
    type: string
    description: the params for make commands
    default: "use_disk_index=ON"
  workspaces:
  - name: shared-data
  results:
  - name: image-fqdn
    type: string
    description: the fully qualified image name
    value: "$(tasks.milvus-image-metadata.results.image)"
  - name: image-tag
    type: string
    description: the tag of the image to build
    value: "$(tasks.milvus-image-metadata.results.tag)"
  finally:
  - name: finally-release-conan-lock
    workspaces:
    - name: source
      workspace: shared-data
    taskRef:
      name: release-lock
    params:
    - name: conan-cache-name
      value: "$(tasks.choose-cache.results.conan-cache-name)"
  tasks:
  - name: fetch-source
    taskRef:
      name: git-batch-merge
    workspaces:
    - name: output
      workspace: shared-data
    params:
    - name: url
      value: $(params.repo_url)
    - name: mode
      value: "merge"
    - name: revision
      value: $(params.pullRequestBaseRef)
    - name: refspec
      value: refs/heads/$(params.pullRequestBaseRef):refs/heads/$(params.pullRequestBaseRef)
    - name: batchedRefs
      value: "refs/pull/$(params.pullRequestNumber)/head"
    retries: 3
  - name: milvus-image-metadata
    taskRef:
      name: image-metadata
    params:
    - name: milvus_repo_owner
      value: $(params.milvus_repo_owner)
    - name: registryToPush
      value: $(params.registryToPush)
    - name: branch
      value: $(params.revision)
    - name: hash
      value: $(tasks.fetch-source.results.commit)
    - name: arch
      value: $(params.arch)
    - name: computing_engine
      value: $(params.computing_engine)
    - name:  build_type
      value: $(params.build_type)
    - name: suppress_suffix_of_image_tag
      value: $(params.suppress_suffix_of_image_tag)
  - name: milvus-env
    runAfter: ["fetch-source"]
    taskRef:
      name: milvus-env 
    workspaces:
    - name: source
      workspace: shared-data
    params:
    - name: os_name
      value: $(params.os_name)
    - name: version
      value: $(params.milvus_env_version)
    - name: computing_engine
      value: $(params.computing_engine)
    - name: registryToPush
      value: $(params.registryToPush)
  - name: sync-env-image
    runAfter: ["milvus-env"]
    taskRef:
      name: sync-env-image
    params:
    - name: src 
      value: $(tasks.milvus-env.results.src_image)
    - name: dest 
      value: $(tasks.milvus-env.results.image)
    retries: 3
  - name: choose-dockerfile
    taskRef:
      name: choose-dockerfile
    params:
    - name: os_name
      value: $(tasks.milvus-env.results.os_name)
    - name: computing_engine
      value: $(params.computing_engine)
  - name: choose-cache
    taskRef:
      name: choose-cache
    params:
    - name: os_name
      value: $(tasks.milvus-env.results.os_name)
    - name: gcc
      value: $(params.gcc)
    - name: build_type 
      value: $(params.build_type)
  - name: release-conan-lock
    workspaces:
    - name: source
      workspace: shared-data
    taskRef:
      name: release-lock
    params:
    - name: conan-cache-name
      value: "$(tasks.choose-cache.results.conan-cache-name)"
  - name: make-milvus
    runAfter: ["fetch-source","sync-env-image", "choose-dockerfile", "release-conan-lock"]
    taskRef:
      name: make
    workspaces:
    - name: source
      workspace: shared-data
    params:
    - name: milvus-env
      value: "$(tasks.milvus-env.results.image)"
    - name: image_name
      value: "$(tasks.milvus-image-metadata.results.image)"
    - name: dockerfile
      value: "$(tasks.choose-dockerfile.results.dockerfile)"
    - name: conan-cache-name
      value: "$(tasks.choose-cache.results.conan-cache-name)"
    - name: build_type
      value: $(params.build_type)
    - name: additional-make-params 
      value: $(params.additional-make-params)
  - name: image-build-push
    runAfter: ["make-milvus"]
    taskRef:
      name: image-build-push
    workspaces:
    - name: source
      workspace: shared-data
    params:
    - name: image_name
      value: "$(tasks.milvus-image-metadata.results.image)"
    - name: dockerfile_location
      value: "$(tasks.choose-dockerfile.results.dockerfile_location)"
    - name: arch
      value: "$(params.arch)"
    retries: 3
